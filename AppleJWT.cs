using System;
using Jose;
using System.Collections.Generic;
using System.Security.Cryptography;

namespace rajapet.Apple
{
    public class AppleJWT
    {

        /// <summary>
        /// Returns a signed JSON Web Token
        /// </summary>
        /// <param name="keyId">Your private key ID from App Store Connect</param>
        /// <param name="issuerID">Your issuer ID from the API Keys page in App Store Connect</param>
        /// <param name="privateKey">The private that was generated by Apple, encoded as Base64</param>
        /// <returns>Signed JWT</returns>
        public string GetToken(string keyId, string issuerID, string privateKey)
        {
            // Create the header
            var header = new Dictionary<string, object>()
            {
                {"alg", "ES256"},
                {"kid", keyId},
                {"typ", "JWT"},
            };

            // Create the payload
            var exp = Math.Round((DateTime.UtcNow.AddMinutes(10) - new DateTime(1970, 1, 1, 0, 0, 0)).TotalSeconds, 0);

            var payload = new Dictionary<string, object>()
            {
                {"aud", "appstoreconnect-v1"},
                { "exp", exp },
                { "iss", issuerID }
            };

            // Generate the signing key from the private that has been given to us
            CngKey key = CngKey.Import(Convert.FromBase64String(privateKey), CngKeyBlobFormat.Pkcs8PrivateBlob);
            
            // Generate the signed token
            string token = Jose.JWT.Encode(payload, key, JwsAlgorithm.ES256, header);

            return token;
        }
    }
}